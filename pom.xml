<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.eclipse.ecsp</groupId>
	<artifactId>hivemq-extension</artifactId>
	<version>0.2.0</version>

	<name>Hivemq Extension</name>
	<description>Hivemq extension library for ECSP project</description>
	<url>https://github.com/eclipse-ecsp/hivemq-extension</url>

	<licenses>
		<license>
			<name>Apache-2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:https://github.com/eclipse-ecsp/hivemq-extension.git</connection>
		<url>https://github.com/eclipse-ecsp/hivemq-extension</url>
		<tag>HEAD</tag>
	</scm>

	<developers>
		<developer>
			<id>dileephemachandranharman</id>
			<name>Dileep Hemachandran</name>
			<email>dileep.hemachandran@harman.com</email>
		</developer>
		<developer>
			<id>akshaymathur-harman</id>
			<name>Akshay Mathur</name>
			<email>akshay.mathur@harman.com</email>
		</developer>
	</developers>

	<issueManagement>
		<system>GitHub</system>
		<url>https://github.com/eclipse-ecsp/hivemq-extension/issues</url>
	</issueManagement>

	<organization>
		<url>https://github.com/eclipse-ecsp</url>
		<name>eclipse-ecsp</name>
	</organization>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<time_stamp>${maven.build.timestamp}</time_stamp>
		<maven.build.timestamp.format>yyyy-MM-dd HH:mm</maven.build.timestamp.format>
		<kafka.version>3.7.2</kafka.version>
		<embedded.mongodb>2.1.1</embedded.mongodb>
		<sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
		<sonar.jacoco.reportPath>
			${project.build.directory}/coverage-reports/jacoco-ut.exec</sonar.jacoco.reportPath>
		<sonar.language>java</sonar.language>
		<jacoco.ut.execution.data.file>
			${project.build.directory}/coverage-reports/jacoco-ut.exec
        </jacoco.ut.execution.data.file>
		<entities-version>1.1.1</entities-version>
		<utils-version>1.1.1</utils-version>
		<transformers-version>1.0.0</transformers-version>
		<cache-version>1.0.0</cache-version>
		<jaeger.version>1.8.1</jaeger.version>
		<redisson.version>3.45.1</redisson.version>
		<moquette.broker.version>0.17</moquette.broker.version>
		<spring.version>6.1.18</spring.version>
		<spring.security.version>6.3.8</spring.security.version>
		<junit.version>4.13.2</junit.version>
		<versions-maven-plugin.version>2.13.0</versions-maven-plugin.version>
		<maven.surefire.version>3.1.2</maven.surefire.version>
		<jacoco-maven-plugin.version>0.8.11</jacoco-maven-plugin.version>
		<sonar-maven-plugin.version>5.1.0.4751</sonar-maven-plugin.version>
		<activation.version>1.1.1</activation.version>
		<jackson.version>2.16.2</jackson.version>
		<metrics-core-version>4.2.12</metrics-core-version>
		<javax.inject.version>1</javax.inject.version>
		<simpleclient_common.version>0.16.0</simpleclient_common.version>
		<lombok.version>1.18.24</lombok.version>
		<httpclient.version>4.5.13</httpclient.version>
		<libthrift.version>0.17.0</libthrift.version>
		<embedded-redis.version>0.6</embedded-redis.version>
		<mockwebserver.version>4.12.0</mockwebserver.version>
		<codahale-metrics-core-version>3.0.2</codahale-metrics-core-version>
		<commons-compress.version>1.26.0</commons-compress.version>
		<commons-lang3.version>3.12.0</commons-lang3.version>
		<commons-io.version>2.17.0</commons-io.version>
		<nimbus-jose-jwt.version>9.37.3</nimbus-jose-jwt.version>
		<hazelcast.version>5.3.6</hazelcast.version>
		<bcprov-jdk18on.version>1.78</bcprov-jdk18on.version>
		<powermock.version>2.0.9</powermock.version>
		<jedis.version>5.1.0</jedis.version>
		<json-simple.version>1.1.1</json-simple.version>
		<hivemq-extension-sdk.version>4.28.13</hivemq-extension-sdk.version>
		<jquery.version>3.6.1</jquery.version>
		<freemarker.version>2.3.31</freemarker.version>
		<hivemq-maven-plugin.version>4.0.3</hivemq-maven-plugin.version>
		<maven-deploy-plugin.version>3.0.0</maven-deploy-plugin.version>
		<maven-shade-plugin.version>3.3.0</maven-shade-plugin.version>
		<log4j-version>2.20.0</log4j-version>
		<snake-yaml.version>2.0</snake-yaml.version>
		<log4j2-cachefile-transformer.version>2.18.0</log4j2-cachefile-transformer.version>
		<maven-compiler-plugin.version>3.11.0</maven-compiler-plugin.version>
		<java.version>17</java.version>
		<springboot.version>3.3.9</springboot.version>
		<guava.version>33.0.0-jre</guava.version>
		<logback.version>1.5.18</logback.version>
		<h2-mvstore.version>2.2.224</h2-mvstore.version>
		<okio.version>3.9.0</okio.version>
		<jetty-util.version>12.0.14</jetty-util.version>
		<kotlin.version>1.8.21</kotlin.version>
		<kubernetes.client-java.version>22.0.0</kubernetes.client-java.version>
		<slf4j-log4j12.version>2.0.0</slf4j-log4j12.version>
		<checkstyle.config.location>${project.basedir}/checkstyle.xml</checkstyle.config.location>
		<sonar.java.checkstyle.reportPaths>
			${project.build.directory}/checkstyle-result.xml</sonar.java.checkstyle.reportPaths>
		<checkstyle.version>10.13.0</checkstyle.version>
        <maven.checkstyle.version>3.3.1</maven.checkstyle.version>
		<sonar.coverage.exclusions>
			**/ApplicationConstants.java,
			**/AuthConstants.java,
			**/PluginMainClass.java,
			**/BaseAuthenticatorProvider.java,
			**/IllegalTopicArgumentException.java,
			**/PropertyNames.java,
			**/EventMetadataConstants.java,
			**/AbstractSubscribeInboundInterceptor.java,
			**/DynamicPropertyUpdater.java,
			**/CommonUtil.java,
			**/AbstractOnPublishReceivedCallback.java,
			**/InvalidClientIdFormatException.java,
			**/InvalidSubscriptionException.java,
			**/UserPayload.java,
			**/DynamicRateLimitPropertyUpdater.java,
			**/PluginConfig.java,
			**/SubscribeAuthProvider.java,
			**/VehicleProfileDataExtractionImpl.java,
			**/AbstractAuthentication.java,
			**/DynamicTopicConfigUpdater.java
		</sonar.coverage.exclusions>
		<maven-javadoc-plugin.version>3.11.2</maven-javadoc-plugin.version>
		<license-tool-plugin.version>1.1.0</license-tool-plugin.version>
		<maven-gpg-plugin.version>3.1.0</maven-gpg-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.13</nexus-staging-maven-plugin.version>
	</properties>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<pluginRepositories>
		<pluginRepository>
			<id>dash-licenses-releases</id>
			<url>https://repo.eclipse.org/content/repositories/dash-licenses-releases/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<dependencies>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.yaml</groupId>
			<artifactId>snakeyaml</artifactId>
			<version>${snake-yaml.version}</version>
		</dependency>
		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
			<version>${freemarker.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars.bower</groupId>
			<artifactId>jquery</artifactId>
			<version>${jquery.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hivemq</groupId>
			<artifactId>hivemq-extension-sdk</artifactId>
			<version>${hivemq-extension-sdk.version}</version>
		</dependency>
		<dependency>
			<groupId>com.googlecode.json-simple</groupId>
			<artifactId>json-simple</artifactId>
			<version>${json-simple.version}</version>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>${jedis.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito2</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>${powermock.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-cbor</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk18on</artifactId>
			<version>${bcprov-jdk18on.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hazelcast</groupId>
			<artifactId>hazelcast</artifactId>
			<version>${hazelcast.version}</version>
		</dependency>
		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>nimbus-jose-jwt</artifactId>
			<version>${nimbus-jose-jwt.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons-io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security.version}</version>
		</dependency>
		<dependency>
			<groupId> org.springframework.boot</groupId>
			<artifactId>spring-boot</artifactId>
			<version>${springboot.version}</version>
		</dependency>
		<dependency>
			<groupId> org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<version>${springboot.version}</version>
		</dependency>
		<dependency>
			<groupId> org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
			<version>${springboot.version}</version>
		</dependency>
		<dependency>
			<groupId> org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
			<version>${springboot.version}</version>
		</dependency>
		<dependency>
			<groupId> org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
			<version>${springboot.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-compress</artifactId>
			<version>${commons-compress.version}</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>${mockwebserver.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.redisson</groupId>
			<artifactId>redisson</artifactId>
			<version>${redisson.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-databind</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.fasterxml.jackson.core</groupId>
					<artifactId>jackson-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.kstyrc</groupId>
			<artifactId>embedded-redis</artifactId>
			<version>${embedded-redis.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>com.google.guava</groupId>
					<artifactId>guava</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.moquette</groupId>
			<artifactId>moquette-broker</artifactId>
			<version>${moquette.broker.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-buffer</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-common</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-resolver</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-transport</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-handler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-codec-http</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-codec</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>
						netty-transport-classes-epoll
					</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-codec-mqtt</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>
						netty-transport-native-epoll
					</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-streams</artifactId>
			<version>${kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka-clients</artifactId>
			<version>${kafka.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.kafka</groupId>
			<artifactId>kafka_2.13</artifactId>
			<version>${kafka.version}</version>
			<exclusions>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-handler</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.netty</groupId>
					<artifactId>netty-transport-native-epoll</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.jaegertracing</groupId>
			<artifactId>jaeger-client</artifactId>
			<version>${jaeger.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.thrift</groupId>
					<artifactId>libthrift</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.thrift</groupId>
			<artifactId>libthrift</artifactId>
			<version>${libthrift.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!--Monitoring-->
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient</artifactId>
			<version>${simpleclient_common.version}</version>
		</dependency>
		<dependency>
			<groupId>io.prometheus</groupId>
			<artifactId>simpleclient_common</artifactId>
			<version>${simpleclient_common.version}</version>
		</dependency>

		<dependency>
			<groupId>org.eclipse.ecsp</groupId>
			<artifactId>entities</artifactId>
			<version>${entities-version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.ecsp</groupId>
			<artifactId>cache-enabler</artifactId>
			<version>${cache-version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.ecsp</groupId>
			<artifactId>utils</artifactId>
			<version>${utils-version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.ecsp</groupId>
			<artifactId>transformers</artifactId>
			<version>${transformers-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax.inject.version}</version>
		</dependency>
		<dependency>
			<groupId>io.dropwizard.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>${metrics-core-version}</version>
		</dependency>
		<dependency>
			<groupId>com.codahale.metrics</groupId>
			<artifactId>metrics-core</artifactId>
			<version>${codahale-metrics-core-version}</version>
		</dependency>
		<dependency>
			<groupId>io.kubernetes</groupId>
			<artifactId>client-java</artifactId>
			<version>${kubernetes.client-java.version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-log4j12.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<version>${jetty-util.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!-- overriding to remove BD scan security issue -->
		<dependency>
		    <groupId>com.squareup.okio</groupId>
		    <artifactId>okio</artifactId>
		    <version>${okio.version}</version>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-classic</artifactId>
		    <version>${logback.version}</version>
		</dependency>
		<dependency>
		    <groupId>ch.qos.logback</groupId>
		    <artifactId>logback-core</artifactId>
		    <version>${logback.version}</version>
		</dependency>
		<dependency>
		    <groupId>com.h2database</groupId>
		    <artifactId>h2-mvstore</artifactId>
		    <version>${h2-mvstore.version}</version>
		    <scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>${versions-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.cyclonedx</groupId>
				<artifactId>cyclonedx-maven-plugin</artifactId>
				<version>2.7.10</version>
				<configuration>
					<projectType>application</projectType>
					<schemaVersion>1.5</schemaVersion>
					<includeBomSerialNumber>true</includeBomSerialNumber>
					<includeCompileScope>true</includeCompileScope>
					<includeProvidedScope>true</includeProvidedScope>
					<includeRuntimeScope>true</includeRuntimeScope>
					<includeSystemScope>true</includeSystemScope>
					<includeTestScope>true</includeTestScope>
					<includeLicenseText>true</includeLicenseText>
					<outputFormat>all</outputFormat>
					<outputDirectory>${project.basedir}/sbom</outputDirectory>
					<verbose>false</verbose>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>makeAggregateBom</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>${sonar-maven-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven.surefire.version}</version>
				<configuration>
					<argLine>-Dsqlite4java.library.path=${project.build.directory}/dependencies
						${surefireArgLine}
						--add-exports java.base/sun.security.x509=ALL-UNNAMED
						--add-opens java.base/sun.security=ALL-UNNAMED
						--add-opens java.base/sun.security.x509=ALL-UNNAMED
						--add-opens java.base/sun.security.util=ALL-UNNAMED
						--add-opens java.base/java.security.cert=ALL-UNNAMED
						--add-opens java.base/java.lang=ALL-UNNAMED
						--add-opens java.base/java.util=ALL-UNNAMED
						--add-opens java.base/java.util.stream=ALL-UNNAMED
						--add-opens java.base/java.math=ALL-UNNAMED
						--add-opens java.base/java.util.concurrent=ALL-UNNAMED
						--add-opens java.base/java.util.concurrent.atomic=ALL-UNNAMED
						--add-opens java.base/java.net=ALL-UNNAMED
						--add-opens java.base/java.text=ALL-UNNAMED
						--add-opens java.base/java.nio=ALL-UNNAMED
						--add-opens java.base/sun.security.jca=ALL-UNNAMED
						--add-opens java.base/java.io=ALL-UNNAMED
						--add-opens java.base/java.lang.reflect=ALL-UNNAMED
						--add-opens java.sql/java.sql=ALL-UNNAMED
						--add-opens java.net.http/jdk.internal.net.http.common=ALL-UNNAMED
					</argLine>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<excludes>
						<exclude>**/*.lic</exclude>
					</excludes>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<release combine.self="override"></release>
					<compilerArgs>
						<arg>--add-exports</arg>
						<arg>java.base/sun.security.x509=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/sun.security=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/sun.security.x509=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/sun.security.util=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.security.cert=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.lang=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.util=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.util.stream=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.math=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.util.concurrent=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.util.concurrent.atomic=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.net=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.text=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.nio=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/sun.security.jca=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.io=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
						<arg>java.base/java.lang.reflect=ALL-UNNAMED</arg>
						<arg>--add-opens</arg>
                        <arg>java.sql/java.sql=ALL-UNNAMED</arg>
                        <arg>--add-opens</arg>
                        <arg>java.net.http/jdk.internal.net.http.common=ALL-UNNAMED</arg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>${maven-shade-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<artifactSet>
								<excludes>
									<exclude>com.hivemq:hivemq-extension-sdk</exclude>
									<exclude>com.google.inject:*</exclude>
									<exclude>com.google.guava:*</exclude>
									<exclude>org.slf4j:*</exclude>
									<exclude>ch.qos.logback:*</exclude>
								</excludes>
							</artifactSet>
							<filters>
								<filter>
									<artifact>*.*</artifact>
									<excludes>
										<exclude>META-INF/*.SF</exclude>
										<exclude>META-INF/*.DSA</exclude>
										<exclude>META-INF/*.RSA</exclude>
									</excludes>
								</filter>
							</filters>
							<transformers>
								<transformer
									implementation="io.github.edwgiz.log4j.maven.plugins.shade.transformer.Log4j2PluginCacheFileTransformer" />
							</transformers>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>io.github.edwgiz</groupId>
						<artifactId>log4j-maven-shade-plugin-extensions</artifactId>
						<version>${log4j2-cachefile-transformer.version}</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>${maven-deploy-plugin.version}</version>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco-maven-plugin.version}</version>
				<configuration>
					<includes>
						<include>org/eclipse/ecsp/hivemq/**/*</include>
						<include>org/eclipse/ecsp/analytics/stream/base/**/*</include>
						<include>org/eclipse/ecsp/serializer/*</include>
					</includes>
				</configuration>
				<executions>
					<!-- Prepares the property pointing to the JaCoCo runtime
                        agent which is passed as VM argument when Maven the Surefire plugin is
					executed. -->
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains
                                the execution data. -->
							<destFile>${jacoco.ut.execution.data.file}</destFile>
							<!-- Sets the name of the property containing
                                the settings for JaCoCo runtime agent. -->
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<!-- Ensures that the code coverage report for unit tests
                        is created after unit tests have been run. -->
					<execution>
						<id>post-unit-test</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
						<configuration>
							<!-- Sets the path to the file which contains
                                the execution data. -->
							<dataFile>${jacoco.ut.execution.data.file}</dataFile>
							<!-- Sets the output directory for the code coverage
                                report. -->
							<outputDirectory>
								${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven.checkstyle.version}</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <outputFileFormat>xml</outputFileFormat>
                            <failOnViolation>true</failOnViolation>
                            <violationSeverity>warning</violationSeverity>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                            <includeResources>true</includeResources>
                            <includeTestResources>true</includeTestResources>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>${checkstyle.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>${maven-javadoc-plugin.version}</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skip>${skipJavadocs}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.eclipse.dash</groupId>
				<artifactId>license-tool-plugin</artifactId>
				<version>${license-tool-plugin.version}</version>
				<configuration>
					<includeScope>test</includeScope>
					<skip>${skipDash}</skip>
					<failWhenReviewNeeded>false</failWhenReviewNeeded>
				</configuration>
				<executions>
					<execution>
						<id>license-check</id>
						<goals>
							<goal>license-check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>${maven-gpg-plugin.version}</version>
				<executions>
					<execution>
						<id>sign-artifacts</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<gpgArguments>
						<arg>--pinentry-mode</arg>
						<arg>loopback</arg>
						<arg>--batch</arg>
						<arg>--yes</arg>
					</gpgArguments>
					<skip>${skipGpgSign}</skip>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>${nexus-staging-maven-plugin.version}</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://oss.sonatype.org/</nexusUrl>
					<skipStaging>true</skipStaging>
					<autoReleaseAfterClose>${autoReleaseAfterClose}</autoReleaseAfterClose>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<id>assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>assembly.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<skipDash>true</skipDash>
				<skipTests>false</skipTests>
				<skipGpgSign>true</skipGpgSign>
				<skipJavadocs>false</skipJavadocs>
				<skipSource>false</skipSource>
				<skipNexusStaging>true</skipNexusStaging>
				<autoReleaseAfterClose>false</autoReleaseAfterClose>
			</properties>
		</profile>
		<profile>
			<id>dash</id>
			<properties>
				<skipDash>false</skipDash>
				<failWhenReviewNeeded>true</failWhenReviewNeeded>
				<skipTests>true</skipTests>
				<skipCheckstyle>true</skipCheckstyle>
				<skipGpgSign>true</skipGpgSign>
				<skipJavadocs>true</skipJavadocs>
				<skipSource>true</skipSource>
				<skipNexusStaging>true</skipNexusStaging>
				<autoReleaseAfterClose>false</autoReleaseAfterClose>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<properties>
				<skipDash>true</skipDash>
				<skipTests>false</skipTests>
				<skipGpgSign>false</skipGpgSign>
				<skipJavadocs>false</skipJavadocs>
				<skipSource>false</skipSource>
				<skipNexusStaging>false</skipNexusStaging>
				<autoReleaseAfterClose>true</autoReleaseAfterClose>
			</properties>
		</profile>
		<profile>
			<id>RunWithHiveMQ</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.hivemq</groupId>
						<artifactId>hivemq-maven-plugin</artifactId>
						<version>${hivemq-maven-plugin.version}</version>
						<executions>
							<execution>
								<id>hivemq</id>
								<phase>package</phase>
								<goals>
									<goal>hivemq</goal>
								</goals>
								<configuration>
									<hiveMQDir>/opt/hivemq/</hiveMQDir>
									<debugMode>SERVER</debugMode>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
