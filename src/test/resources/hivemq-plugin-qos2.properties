#Device authorization keys
whitelisted.users=haa_api,haa_notification
device.mqtt.publish.topics=events,alerts
device.mqtt.subscribe.topics=config
mqtt.topic.infix.2d=2d
mqtt.topic.infix.2c=2c
user.mqtt.subscribe.topics=notification
internal.user.mqtt.subscribe.topics=config,notification
mqtt.user.prefix=harman/dev/

#mqtt topics
mqtt.topicFormatter=org.eclipse.ecsp.hivemq.utils.IgniteTopicFormatter
mqtt.topic.prefix=haa/harman/dev/
mqtt.topic.generalevents.suffix=/events
mqtt.topic.alerts.suffix=/alerts
mqtt.decompress.enabled=true
mqtt.qos.level=TWO

#JWT 
#this public key is without any prefix and suffix and is extracted from provided wso.pem file using command $ openssl x509 -in wso2carbon_token_signer.pem -pubkey  -out test_wso_publickey.txt
jwt.publickey.path=/opt/hivemq/conf/wso_harman_dev_publickey.txt

#Plugin configuration
authentication.impl.class=org.eclipse.ecsp.hivemq.auth.authentication.JWTAuthentication
authorization.impl.class=org.eclipse.ecsp.hivemq.auth.authorization.Authorizer
topic.mapper.impl.class=org.eclipse.ecsp.hivemq.routing.TopicMapperCloudMobile
client.lifecycle.impl.class=org.eclipse.ecsp.hivemq.callbacks.ClientLifeCycleEvents
hivemq.sink.impl.class=org.eclipse.ecsp.analytics.stream.base.dao.impl.KafkaSinkNode
device.to.vehicle.mapper.impl=org.eclipse.ecsp.hivemq.mapper.DefaultDeviceToVehicleMapper

#Ignite internal topics 
kafka.sink.topic.connect=connect
kafka.sink.topic.disconnect=disconnect

wrap.with.ignite.event.enabled=true
ingestion.serializer.impl=org.eclipse.ecsp.serializer.IngestionSerializerFSTImpl
allowed.blob.sources=ignite,telematics
allowed.blob.encodings=gpb,json
#transform.<blob source>.<blob type>. Mapping of source and type to kafka topic
transform.ignite.json=events,alerts
transform.telematics.gpb=ecall,bcall
environment=test